Code = CodeString | CodeConcatenation.

Ctor CodeString str:String.

Ctor CodeConcatenation parts.
Theorem: forall c, parts: c = CodeConcatenation parts -> all (parts c) (_ `is` Code)

code1:(CodeConcatenation) + code2:(Code) : Code =
  CodeConcatenation (append (parts code1) code2).
code1:(Code) + code2:(Code) =
  CodeConcatenation (code1 :: code2 :: EmptyList).

Ctor Pos pos:Natural.

Ctor List type.
x `is` List type = all x (\item -> item `is` type).

Ctor EmptyList.
Ctor item :: list.

all list predicate =
  if list:
    is x :: xs then (predicate x) and all xs predicate
    is EmptyList then true
.

