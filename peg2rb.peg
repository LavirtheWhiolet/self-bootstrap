{...
#!/usr/bin/ruby
#encoding: UTF-8

...}


{...


class Code
  
  include Enumerable
  
  def initialize(parts)
    @parts = parts
  end
  
  def self.from other
    case other
    when Code then other
    when String then Code.new([other])
    else raise %(can not convert #{other.inspect} to #{Code})
    end
  end
  
  def + other
    Code.new(self.parts + Code.from(other).parts)
  end
  
  def each_part(&block)
    parts.each(&block)
  end
  
  alias each each_part
  
  protected
  
  # Private.
  attr_reader :parts
  
end


# returns empty Code.
def code
  Code.new([])
end


...}
